# 立即执行函数

#####一、声明一个函数，并马上调用这个匿名函数就叫做立即执行函数。（就是第七章中的私有作用域）
       
        (function(){
            alert("我是匿名函数")
        })()
     
 ####二、立即执行函数写法

        function(){
            alert("我是匿名函数")
        }()

上面这种语句语法错误，因为fuction既可以当做语句，也可以当做表达式
如果function出现在行首，一律解析为语句，因此当引擎看到function在行首后，认为这一段都是函数声明，*函数声明后面不能有圆括号，所以就报错。
         

######解决方法就是不要让function出现在开头，让js引擎把它理解为一个表达式，最简单的办法就是将其放在一个圆括号内
         (function(){
            alert("hello world")
         }());

         (function(){
             alert("hello pjw")
         })()
         // 全包和半包都可以

         // 甚至下面这几种也可以，只要不让function出现在开头，就能在函数后面加圆括号
         var fn=function(){
            alert("nihao")
        }();        //这种方式虽然可以实现立即执行，但立即执行函数的意义就是避免命名污染全局环境

        +function(){
            alert("hhhh")
        }();

        void function(){
            alert("youxi")
        }();


###三、立即执行函数的作用
      html
      <ul class="myUl">
        <li>彭佳伟</li>
        <li>23</li>
        <li>前端开发工程师</li>
      </ul>

      JS
     面试题：立即执行函数在循环中的作用
        var ul=document.querySelector(".myUl");
        var li=ul.children;

        for(i=0;i<li.length;i++){
              li[i].onclick=function(){
                alert(i)
              }
          } 
        // 可见alert的结果总是3
        因为：此时的变量i是一个全局变量，是贯穿整个作用域的，而不是给每一个li分配一个i，点击事件是异步的，用户点击的时候
        for循环已经完成了，所以i的值已经为3，且是全局变量

        解决方法是：在for循环内部创建一个立即执行函数（创建私有作用域），让每一个li都分配到一个i，给每一个li创建一个独立的
        作用域，再向函数里传入i的副本j，这个j就只是在匿名函数中的私有变量，不会上升为全局变量，
        所以输出时在找j变量值的时候，就在匿名函数内部就取到了j的值，所以就能一个个输出了
        for(i=0;i<li.length;i++){
            (function(j){
                li[i].onclick=function(){
                    alert(j)
                }
            })(i)
        }

####总结：
#####立即执行函数的作用：
       1.不必为函数命名，避免了污染全局空间
       2.立即执行函数内部形成了一个单独的作用域，可以封装一些外部无法读取的私有变量

       总之：立即执行函数会形成一个单独的作用域，我们可以封装一些临时变量，或者局部变量，避免污染全局环境
        

#####二 使用场景
    当你的代码需要创建多个变量，但这部分代码可能只需要执行一次时，创建的这些变量如果作为全局变量，
    将占用大量的全局空间，所以我们可以使用立即执行函数，将这些变量包起来，不让它们污染全局变量



###四、立即执行函数的参数
 #####1.立即执行函数的参数
        (function(j){
            //代码中可以使用j
        })(i)
       如果立即执行函数中需要全局变量，可以将其作为参数传递进去（这里i是实参，j是形参）


 #####2.立即执行函数的返回值
     立即执行函数也有返回值，除了可以返回基本类型外，还可以返回任何类型的值，如对象，函数
        var result=(function(){
            var res=3+3;
            return res
        })()
        console.log(result)         // 6 直接return就用函数名就能直接打印
        

        var result2=(function(){
            res2=2+2;

            return function(){
                return res2;    
            }
        })()
        console.log(result2())      
        如果返回值又在一个内部匿名函数中，就要用函数名加圆括号result2()这样才能调用内部的那个函数

        *如果以后需要在外部调用立即执行函数内部的一些变量，就可以在立即执行函数内部再创建一个匿名函数，
         将需要导出的变量返回出来，这样就不会污染到全局变量


##总结：立即执行函数的作用
1.改变变量的作用域（创建一个独立的作用域，让变量只能在该作用域中使用）
2.封装临时变量，避免污染全局环境。也可以在立即执行函数里返回全局需要的变量。