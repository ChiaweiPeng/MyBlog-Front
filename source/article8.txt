# flex布局总结
## 常用属性

 ### 容器属性：
1.flex-direction: 主轴方向 ; 不设此值,display:flex默认就是row方向

2.flex-wrap: 处理换行 wrap/nowrap/wrap-reverse(反向换行，第一行在下方)
        心得： a.wrap-reverse在做移动端，比如微信的下部上拉菜单的有奇效，设ul为此就能做出上拉菜单；

3.flex-flow:direction与wrap 的简写 默认：row nowrap

4.justify-content: 主轴对齐；space-evenly:完全平均分配

5.align-items: 纵轴对齐；默认:strech 
        注意：a.当项目设置了width/height/min-,max-width/height后，strech拉伸无效

6.align-content:多根轴线对齐，项目不只一行。默认strech轴线将占满整个交叉轴
        注意：a.比对的是交叉轴，每行项目比对容器交叉轴
 


 ###项目属性：
 1.order: 排列顺序，越小越前，默认为0

 2.flex-grow:放大比例，默认为0(有剩余空间，也不放大);若设所以项目flex-grow都为1,将等分剩余空间；设某个项目为2,就更放大

 3.flex-shrink:缩小比例，默认为1(空间不足，则缩小);若为0,则不缩小;  此值无负值

 4.flex-basis:类似于给项目设置固定width/height;(分配剩余空间前，项目占据的主轴空间);默认auto,即项目本来大小
        注意：优先级：min-,max- width/height > flex-basis > width/height

5.flex:grow shrink basis的简写，默认为0 1 auto ; 快捷值：auto(1 1 auto) / none(0 0 auto)
        注意：后两值为可选值，一般都直接 flex:1(即felx-grow:1) 让项目占满剩余空间

6.align-self:单个项目的交叉轴对齐，可覆盖默认继承父元素的align-items


## Flex与定位:
1.绝对定位：没有了空间位，将不受弹性盒影响；
2.相对定位：依然有空间位，会受到弹性盒影响


## 常见的使用场景：
1.移动端的布局分布,比如微信公众号聊天界面

    .body{
        width:100vw;   //移动端，一般都要设置一下最外面大盒的宽高，占满整个视觉区
        height:100vh;
        display:flex;
        flex-direction:column; //设为纵向布局，自然就main在上，footer在下了
    }
    .main{
        flex:1; //主要区域占满剩余空间
        overflow:auto; // 让主区域可以滚动翻
    }
    .footer{
        height:10vh;
        display:flex; // footer又可以设置flex，让里边的项目又弹性布置
        justify-content:space-around;
        align-items:center;
    }
    

2.顶部导航栏
注意:
1.做导航栏，不要老直接设置整个header的高度，而要设置li高度,让li去撑起整个的高度，不然li就不能撑满header了

2.整个left要给一个宽度，然后让ul设flex,space-between才能让li分散充满整个left

3.left部分设了flex，然后设margin-right:auto，就能让right部分直接到右边了，而不需要再整个header又给一个space-between

4.注意flex是要给到想分散元素的父元素的，所以一定要给到ul，而不是给.left

    .top-nav{
        width:80%;
        margin:0 auto;
        display:flex;  // 因为左右部分也需要flex来分散开嘛
    }
    .top-nav .left{
        width:50%;
        margin-right:auto;  // 自动能将right顶到最右边
    }
    .top-nav .left ul{
        display:flex;
        justify-content:space-between;
    }
    .top-nav .left ul li{
        flex:1;  // 使每个li能占据空余空间，不然li只会包括内容
        height:6vh;
        line-hight:6vh;
        text-align:6vh;  // li不需要再设置flex居中了，直接用这两个属性就好
    }
  
